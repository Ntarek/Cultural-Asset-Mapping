# -*- coding: utf-8 -*-
"""OSM_data_query.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IR9pcx82VpOQ-5tYU2Lx6bkbVdqP3KTg
"""

from google.colab import drive
drive.mount('/content/drive')

import requests
import geopandas as gpd
import pandas as pd

# Define broader Overpass API query: all artworks in Los Angeles
query = """
[out:json][timeout:60];
area["name"="Los Angeles"]->.searchArea;
(
  node["tourism"="artwork"](area.searchArea);
  way["tourism"="artwork"](area.searchArea);
  relation["tourism"="artwork"](area.searchArea);
);
out center;
"""

# Overpass API URL
url = "http://overpass-api.de/api/interpreter"

# Request data
response = requests.get(url, params={'data': query})

if response.status_code == 200:
    data = response.json()

    if 'remark' in data:
        print(f"Overpass API Error: {data['remark']}")
    else:
        elements = data.get("elements", [])
        locations = []

        for element in elements:
            tags = element.get("tags", {})
            lat = element.get("lat", element.get("center", {}).get("lat"))
            lon = element.get("lon", element.get("center", {}).get("lon"))

            if lat and lon:
                locations.append({
                    "id": element.get("id"),
                    "name": tags.get("name", "Unknown"),
                    "artwork_type": tags.get("artwork_type", ""),
                    "description": tags.get("description", ""),
                    "lat": lat,
                    "lon": lon
                })

        # Convert to DataFrame
        df = pd.DataFrame(locations)

        if df.empty:
            print("No artwork locations found.")
        else:
            # Combine fields for filtering
            df["combined_tags"] = (
                df["name"].fillna('') + " " +
                df["artwork_type"].fillna('') + " " +
                df["description"].fillna('')
            )

            # Filter for relevant artwork types
            keywords = "mural|graffiti|stencil|streetart|street_art|street art"
            filtered_df = df[df["combined_tags"].str.contains(keywords, case=False, na=False)].copy()

            if filtered_df.empty:
                print("No murals or related artwork types found after filtering.")
            else:
                # Convert to GeoDataFrame
                gdf = gpd.GeoDataFrame(
                    filtered_df,
                    geometry=gpd.points_from_xy(filtered_df["lon"], filtered_df["lat"]),
                    crs="EPSG:4326"
                )

                # Save to CSV
                gdf.to_csv("la_street_art_filtered.csv", index=False)
                print(f"Filtered dataset saved as CSV: la_street_art_filtered.csv")
                print(f"Number of filtered results: {len(gdf)}")
                print(gdf[["name", "artwork_type", "lat", "lon"]].head())

else:
    print(f"Error fetching data from Overpass API. Status code: {response.status_code}")
    print(f"Response content: {response.text}")

gdf.to_csv("/content/drive/My Drive/Colab Notebooks/la_street_art_filtered.csv", index=False)